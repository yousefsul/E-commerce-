[{"C:\\MERN Stack\\E-commerce\\client\\src\\index.js":"1","C:\\MERN Stack\\E-commerce\\client\\src\\reportWebVitals.js":"2","C:\\MERN Stack\\E-commerce\\client\\src\\App.js":"3","C:\\MERN Stack\\E-commerce\\client\\src\\reducers\\index.js":"4","C:\\MERN Stack\\E-commerce\\client\\src\\firebase.js":"5","C:\\MERN Stack\\E-commerce\\client\\src\\pages\\Home.js":"6","C:\\MERN Stack\\E-commerce\\client\\src\\pages\\auth\\Login.js":"7","C:\\MERN Stack\\E-commerce\\client\\src\\pages\\auth\\RegisterComplete.js":"8","C:\\MERN Stack\\E-commerce\\client\\src\\pages\\auth\\Register.js":"9","C:\\MERN Stack\\E-commerce\\client\\src\\pages\\auth\\ForgetPassword.js":"10","C:\\MERN Stack\\E-commerce\\client\\src\\components\\nav\\Header.js":"11","C:\\MERN Stack\\E-commerce\\client\\src\\reducers\\userReducer.js":"12"},{"size":856,"mtime":1609596242915,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1403,"mtime":1609770688959,"results":"16","hashOfConfig":"14"},{"size":183,"mtime":1609770837702,"results":"17","hashOfConfig":"14"},{"size":626,"mtime":1609591263001,"results":"18","hashOfConfig":"14"},{"size":144,"mtime":1609591263001,"results":"19","hashOfConfig":"14"},{"size":3819,"mtime":1609776036727,"results":"20","hashOfConfig":"14"},{"size":2468,"mtime":1609771004175,"results":"21","hashOfConfig":"14"},{"size":1524,"mtime":1609669191774,"results":"22","hashOfConfig":"14"},{"size":1660,"mtime":1609669039885,"results":"23","hashOfConfig":"14"},{"size":1926,"mtime":1609777671153,"results":"24","hashOfConfig":"14"},{"size":276,"mtime":1609769527111,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1k2u02y",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\MERN Stack\\E-commerce\\client\\src\\index.js",[],["56","57"],"C:\\MERN Stack\\E-commerce\\client\\src\\reportWebVitals.js",[],"C:\\MERN Stack\\E-commerce\\client\\src\\App.js",["58","59"],"import React ,{useEffect} from 'react';\nimport {Switch , Route} from 'react-router-dom';\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport Login from './pages/auth/Login'\nimport Register from './pages/auth/Register';\nimport Home from './pages/Home';\nimport Header from './components/nav/Header';\nimport RegisterComplete from './pages/auth/RegisterComplete'\nimport ForgetPassword from \"./pages/auth/ForgetPassword\";\nimport {auth} from './firebase';\nimport {useDispatch} from \"react-redux\";\n\n\nconst App = () => {\n  const dispatch= useDispatch()\n\n  useEffect(()=>{\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if(user){\n        const idTokenResult = await user.getIdTokenResult()\n        dispatch({\n          type: \"LOGGED_IN_USER\" ,\n          payload: {\n            email: user.email,\n            token : idTokenResult.token,\n\n          }\n        })\n\n      }\n    })\n  },[])\n  return (\n    <>\n    <Header />\n    <ToastContainer />\n    <Switch>\n      <Route exact path = \"/\" component = {Home}/>\n      <Route exact path = \"/login\" component = {Login}/>\n      <Route exact path = \"/register\" component = {Register}/>\n      <Route exact path = \"/register/complete\" component = {RegisterComplete}/>\n      <Route exact path = \"/forget/password\" component = {ForgetPassword}/>\n    </Switch>\n    </> \n  );  \n}\n\nexport default App;\n","C:\\MERN Stack\\E-commerce\\client\\src\\reducers\\index.js",[],"C:\\MERN Stack\\E-commerce\\client\\src\\firebase.js",[],"C:\\MERN Stack\\E-commerce\\client\\src\\pages\\Home.js",[],"C:\\MERN Stack\\E-commerce\\client\\src\\pages\\auth\\Login.js",["60"],"import React , {useState , useEffect} from 'react';\r\nimport {auth, GoogleAuthProvider} from '../../firebase';\r\nimport {toast} from 'react-toastify';\r\nimport {Button} from 'antd';\r\nimport { GoogleOutlined, MailOutlined } from '@ant-design/icons';\r\nimport {useDispatch ,useSelector} from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst createOrUpdateUser = async (authtoken) =>{\r\n    return await axios.put('http://localhost:8000/api' , {} , {\r\n        headers: {\r\n            authtoken: authtoken\r\n        }\r\n    })\r\n}\r\n\r\nconst Login = ({history}) => {\r\n    const [email,setEmail]= useState(\"\")\r\n    const [password,setPassword]= useState(\"\")\r\n    const [loading,setLoading]= useState(false)\r\n    const {user} =useSelector((state)=> ({...state}))\r\n\r\n    useEffect(()=>{\r\n        if(user && user.token)\r\n            history.push(\"/\")\r\n    },[user])\r\n\r\n    \r\n    let dispatch = useDispatch()\r\n    \r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        try {\r\n            const result = await auth.signInWithEmailAndPassword(email, password)\r\n            const {user} = result\r\n            const idTokenResult = await user.getIdTokenResult()\r\n            \r\n            createOrUpdateUser(idTokenResult.token)\r\n            .then((res) => console.log(\"hello\"))\r\n            .catch()\r\n\r\n            dispatch({\r\n                type: \"LOGGED_IN_USER\",\r\n                payload: {\r\n                    email: user.email,\r\n                    token: idTokenResult.token\r\n                }\r\n            })\r\n            history.push('/')\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n    }\r\n    const googleLogin = async () => {\r\n        auth.signInWithPopup(GoogleAuthProvider)\r\n        .then(async (result) => {\r\n            const {user} = result\r\n            const idTokenResult = await user.getIdTokenResult()\r\n            dispatch({\r\n                type: \"LOGGED_IN_USER\",\r\n                payload: {\r\n                    email: user.email,\r\n                    token: idTokenResult.token\r\n                }\r\n            })\r\n            history.push('/')\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.message)\r\n            toast.error(error.message)\r\n        })\r\n\r\n    }\r\n    \r\n    const loginForm = () =><form onSubmit = {handleSubmit}>\r\n    <div className=\"form-group\">\r\n    <input type=\"email\" className= \"form-control\" value= {email} onChange = {e=> setEmail(e.target.value)} autoFocus placeholder= \"Your Email\"/>\r\n    </div>\r\n    <br />\r\n    <div className=\"form-group\">\r\n    <input type=\"password\" className= \"form-control\" value= {password} onChange = {e=> setPassword(e.target.value)} placeholder= \"Your Password\"/>\r\n    </div>\r\n    <br />\r\n    <Button onClick={handleSubmit} type=\"primary\" \r\n    className=\"mb-3\"block shape=\"round\" icon={<MailOutlined />} size=\"large\" disabled={!email || password.length<6}>Login With Email/Password</Button>    \r\n    </form>\r\n    return(\r\n        <div className = \"container p-5\">\r\n        <div className = \"row\">\r\n        <div className=\"col-md-4 offset-md-3\">\r\n        {loading ?   (<h4 className=\"text-danger\">Loading ...</h4>) : (<h4>Login</h4> )  }\r\n        {loginForm()}\r\n        {\r\n            <Button onClick={googleLogin} type=\"danger\" \r\n            className=\"mb-3\" block shape=\"round\" icon={<GoogleOutlined />} size=\"large\">Login with Google</Button>    }\r\n            <Link to=\"/forget/password\" className =\"float-right text-danger\">Forget Password</Link>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            )\r\n            \r\n            \r\n        }\r\n        \r\n        export default Login;\r\n        \r\n        \r\n        \r\n        ","C:\\MERN Stack\\E-commerce\\client\\src\\pages\\auth\\RegisterComplete.js",["61"],"import React , {useState ,useEffect} from 'react';\r\nimport {auth} from '../../firebase';\r\nimport {toast} from 'react-toastify';\r\n\r\nconst RegisterComplete = ({history}) => {\r\n    const [email,setEmail]= useState(\"\")\r\n    const [password,SetPassword]=useState(\"\")\r\n    const [passwordConfirmation,SetPasswordConfirmation]=useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setEmail(window.localStorage.getItem('emailForRegistration'))\r\n    },[]\r\n    \r\n    )\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        if(!email || !password){\r\n            toast.error(\"Email and Password is Required\")\r\n            return\r\n        }\r\n\r\n        if(password !== passwordConfirmation){\r\n            toast.error(\"Please make sure your passwords match\")\r\n            return\r\n        }\r\n\r\n        if(password.length<6){\r\n            toast.error(\"Password must be at least 6 characters long\")\r\n            return\r\n        }\r\n\r\n        try {\r\n            const result= await auth.signInWithEmailLink(email , window.location.href) \r\n            if(result.user.emailVerified){\r\n                window.localStorage.removeItem(\"emailForRegistration\")\r\n                let user = auth.currentUser\r\n                await user.updatePassword(password)\r\n                const idTokenResult = await user.getIdTokenResult()\r\n                history.push('/')\r\n\r\n\r\n            }\r\n        } catch (error) {\r\n        console.log(error)    \r\n        }\r\n\r\n    }   \r\n\r\n    const completeRegistrationForm = () =><form onSubmit = {handleSubmit}>\r\n        <input type=\"email\" className= \"form-control\" value= {email} disabled/>\r\n        <br />\r\n        <input type=\"password\" className= \"form-control\" value= {password} onChange={e =>{SetPassword(e.target.value)}} autoFocus placeholder=\"Password\"/>\r\n        <input type=\"password\" className= \"form-control\" value= {passwordConfirmation} onChange={e =>{SetPasswordConfirmation(e.target.value)}} autoFocus placeholder=\"Password Confirmation\"/>\r\n\r\n        <br />\r\n        <button type=\"submit\" className = \"btn btn-raised offset-md-4\">Complete Registration</button>\r\n    </form>\r\n    return(\r\n        <div className = \"container p-5\">\r\n            <div className = \"row\">\r\n                <div className=\"col-md-4 offset-md-3\">\r\n                    <h4>Registr Complete</h4>\r\n                    {completeRegistrationForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default RegisterComplete;","C:\\MERN Stack\\E-commerce\\client\\src\\pages\\auth\\Register.js",["62"],"import React , {useState ,useEffect} from 'react';\r\nimport {auth} from '../../firebase';\r\nimport {toast} from 'react-toastify';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst Register = ({history}) => {\r\n    const [email,setEmail]= useState(\"\")\r\n    const {user} =useSelector((state)=> ({...state}))\r\n\r\n    useEffect(()=>{\r\n        if(user && user.token)\r\n            history.push(\"/\")\r\n    },[user])\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        const config = {\r\n            url: \"http://localhost:3000/register/complete\",\r\n            handleCodeInApp: true\r\n        }\r\n        await auth.sendSignInLinkToEmail(email,config)\r\n        toast.success(`Email is sent to  ${email}. Click the link to complete your registration`)\r\n        window.localStorage.setItem('emailForRegistration',email)\r\n        setEmail('')\r\n    }\r\n\r\n    const registerForm = () =><form onSubmit = {handleSubmit}>\r\n        <input type=\"email\" className= \"form-control\" value= {email} onChange = {e=> setEmail(e.target.value)} autoFocus placeholder= \"Email Address\"/>\r\n        <br />\r\n        <button type=\"submit\" className = \"btn btn-raised offset-md-4\">Register</button>\r\n    </form>\r\n    return(\r\n        <div className = \"container p-5\">\r\n            <div className = \"row\">\r\n                <div className=\"col-md-4 offset-md-3\">\r\n                    <h4>Register</h4>\r\n                    {registerForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Register;","C:\\MERN Stack\\E-commerce\\client\\src\\pages\\auth\\ForgetPassword.js",["63"],"import React , {useEffect, useState} from 'react';\r\nimport {auth} from '../../firebase';\r\nimport {toast} from 'react-toastify';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst ForgetPassword = ({history}) => {\r\n    const [email ,setEmail] =useState('')\r\n    const [loading , setLoading] = useState(false)\r\n    const {user} =useSelector((state)=> ({...state}))\r\n\r\n    useEffect(()=>{\r\n        if(user && user.token)\r\n            history.push(\"/\")\r\n    },[user])\r\n\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        const config = {\r\n            url : \"http://localhost:3000/login\",\r\n            handleCodeInApp : true,\r\n        }\r\n        await auth.sendPasswordResetEmail(email , config)\r\n        .then(() =>{\r\n            setEmail('')\r\n            setLoading(false)\r\n            toast.success(\"Check your email for password reset link\")\r\n        })\r\n        .catch((error)=>{\r\n            setLoading(false)\r\n            toast.error(error.message)\r\n        })\r\n    }\r\n\r\n    return <div className = \"contatiner col-md-6 offset-md-3 p-5\">\r\n        {loading ? (<h4 className = \"text-danger\">Loading ...</h4>) : (<h4>Forget Password</h4>)}\r\n\r\n        <form onSubmit = {handleSubmit}>\r\n            <input type = \"email\"\r\n            className = \"form-control\"\r\n            value = {email}\r\n            onChange = {e => setEmail(e.target.value)}\r\n            placeholder = \"Type your email\"\r\n            autoFocus \r\n            />\r\n            <br />\r\n            <button className = \"btn btn-raised\" disabled = {!email}>Submit</button>\r\n\r\n\r\n        </form>\r\n    </div>\r\n\r\n}\r\n\r\nexport default ForgetPassword","C:\\MERN Stack\\E-commerce\\client\\src\\components\\nav\\Header.js",["64"],"C:\\MERN Stack\\E-commerce\\client\\src\\reducers\\userReducer.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":21,"column":11,"nodeType":"71","messageId":"72","endLine":21,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":35,"column":5,"nodeType":"75","endLine":35,"endColumn":7,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":28,"column":7,"nodeType":"75","endLine":28,"endColumn":13,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"79","line":39,"column":23,"nodeType":"71","messageId":"72","endLine":39,"endColumn":36},{"ruleId":"73","severity":1,"message":"77","line":13,"column":7,"nodeType":"75","endLine":13,"endColumn":13,"suggestions":"80"},{"ruleId":"73","severity":1,"message":"77","line":15,"column":7,"nodeType":"75","endLine":15,"endColumn":13,"suggestions":"81"},{"ruleId":"69","severity":1,"message":"82","line":16,"column":11,"nodeType":"71","messageId":"72","endLine":16,"endColumn":15},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'unsubscribe' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["85"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["86"],"'idTokenResult' is assigned a value but never used.",["87"],["88"],"'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"91","fix":"93"},{"desc":"91","fix":"94"},"Update the dependencies array to be: [dispatch]",{"range":"95","text":"96"},"Update the dependencies array to be: [history, user]",{"range":"97","text":"98"},{"range":"99","text":"98"},{"range":"100","text":"98"},[950,952],"[dispatch]",[887,893],"[history, user]",[397,403],[458,464]]